@import url("fonts.css");


body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100vh;
    font-family: "MTS text regular", arial, sans-serif;
}

input, button {
    background: none;
    border: none;
}

button:active {
    border: none;
}

.fancy {
    transition: 0.1s ease-out;
}

.fancy:hover {
    transform: scale(101%);
    box-shadow: gray 1px 5px 10px;
}

main {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 2fr 5fr;
    margin: 0;
    padding: 0;
}

.left-part, .right-part {
    /*height: 100%;*/
    padding: 30px;
}

.left-part {
    background: #8f8f8f;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
}

.code-block {
    /*outline: 1px solid red;*/
    max-height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.qr-code {
    border: 5px solid gray;
    border-radius: 25px;
    width: 200px;
    height: 200px;
}

.text-code {
    font-family: "MTS wide bold", sans-serif;
    font-size: 2rem;
}


.chat-block {
    display: none;
    border-radius: 25px;
    padding: 15px 10px 5px 10px;
    background: #dedede;
    width: 80%;
    margin: auto;
}

.chat-form {
    width: 100%;
}

.chat-title {
    font-family: "MTS text regular", sans-serif;
}

.chat-messages {
    max-height: 40%;
}

.chat-messages > li {
    text-decoration: none;
    margin: 5px;
}





.right-part {
    background: #dedede;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    /*position: relative;*/
}

.right-part > * {
    /*outline: 1px solid blue;*/
}


.tracks-queue {
    display: flex;
    flex-direction: column;
}

.queue-title {
    font-family: "MTS wide bold", sans-serif;
    font-size: 1.4rem;
    margin-bottom: 10px;
}

.track {
    font-family: "MTS wide regular", sans-serif;
    font-size: 0.9rem;
    margin-bottom: 10px;
    padding: 0px 10px 0px 10px;
    border-radius: 15px;
    background: rgba(255, 255, 255, 0.38);
    display: flex;
}

.track-spawner {
    font-family: "MTS wide regular", sans-serif;
    display: flex;
    align-items: center;
    height: 30px;
    padding: 10px 15px 10px 15px;
}

.track-icon {
    color: rgb(255, 0, 0);
}

.track-icon.active {
    animation: scaleAnimation 2s infinite;
    font-weight: 600;
}

.track > * {
    margin: 10px;
}

.track-title {
    font-family: "MTS text regular", sans-serif;
}

.track-duration {
    margin-left: auto;
}






.upload-container {
    opacity: 0.5;
    border: 2px dashed rgb(255, 0, 0);
    border-radius: 8px;
    padding: 20px;
    text-align: center;
    cursor: pointer;
    width: 50%;
    margin: auto;
    font-family: "MTS wide regular", sans-serif;
    transition: 0.1s ease-out;
}

.upload-container:hover {
    opacity: 1;
    /*border-color: #2980b9;*/
    border: 5px solid rgb(255, 0, 0);
    /*border-radius: 0;*/
}

.upload-container input[type="file"] {
    display: none;
}

.upload-icon {
    font-size: 36px;
    color: red;
    margin-bottom: 10px;
}

.upload-text {
    color: #333;
}

.upload-container.dragover {
    border-color: #27ae60;
    background-color: #ecf0f1;
}




.player {
    font-family: "MTS wide regular", sans-serif;
    color: white;
    background: rgba(51, 51, 51, 0.6);
    /*width: 100%;*/
    /*box-sizing: border-box;*/
    height: 50px;
    /*position: absolute;*/
    /*bottom: 0;*/
    /*right: 0;*/
    /*border: 1px solid blue;*/
    justify-self: flex-end;
    display: flex;
    align-items: center;
    justify-content: space-around;
    padding: 5px 15px 5px 15px;
    border-radius: 25px;
}

.control-button {
    color: white;
    padding: 10px;
    border-radius: 50%;
    transition: 0.2s ease-out;
}

.control-button > svg {
    width: 100%;
    height: 100%;
}

.text-and-seek {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    min-width: 70%;
}

.seeker {
    margin: 0;
    padding: 0;
}

.sound-button {
    margin-right: 0;
}

.muted-icon {
    display: none;
}







@keyframes scaleAnimation {
  0% {
    transform: scale(1); /* начальный размер */
  }
  50% {
    transform: scale(1.3); /* увеличение до 110% размера */
  }
  100% {
    transform: scale(1); /* возвращение к начальному размеру */
  }
}